{"version":3,"sources":["component/Fullpage.js","sections/Navigation.js","component/DownIcon.js","sections/TitleAndIcon.js","sections/AboutSection.js","component/TopIcon.js","component/skillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","Component","children","this","props","className","DownIcon","style","color","display","flexDirection","alignItems","justifyContent","marginBottom","transform","src","icon","TitleAndIcon","classN","data","title","subtitle","Object","keys","links","map","key","url","href","activeClass","to","spy","smooth","offset","duration","delay","icons","down","name","AboutSection","sections","items","content","TopIcon","SkillCard","skill","image","SkillSection","eachskill","onSetActive","handleSetActive","top","App","handleClick","rand","parseInt","Math","random","console","log","tem","tem1","tem2","setState","state","float","class","paint","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ca31d36.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport './Fullpage.css'\r\n\r\nclass Fullpage extends Component {\r\n    render(){\r\n        const {children} = this.props\r\n        return(\r\n            <div className = {`fullpage  ${this.props.className ||' '}`} >\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default  Fullpage","import React, {Component} from 'react';\r\nimport { Link } from 'react-scroll';\r\nimport data from \"../data.json\";\r\nimport './Navigation.css'\r\nimport App from '../App.js';\r\n\r\n\r\n\r\n\r\n\r\nclass Navigation extends Component {\r\n    \r\n     \r\n    \r\n    render(){\r\n        return(\r\n        <div className = \"navarbar\">\r\n       \r\n            <ul>\r\n           <li>  <a className=\"active\" href =\"#title\" ><Link activeClass=\"active\" to=\"title\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>BAHMAN!</Link> </a></li>\r\n            <li> <a href =\"#About\" ><Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>ABOUT</Link> </a></li>\r\n            <li> <a href =\"#Skill\" ><Link activeClass=\"active\" to=\"skill\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>SKILL</Link> </a></li>\r\n            <li style={{float: 'right'}} >\r\n                <a class=\"Material\" href=\"#paint \"> <img src={data.icons.paint} \r\n                 onClick = {this.handleClick} \r\n                 ></img></a></li>\r\n                \r\n             </ul>\r\n            \r\n        </div>\r\n           \r\n     \r\n        )}\r\n}\r\nexport default Navigation","import React, {Component} from 'react';\r\nimport { ICONS } from 'jest-util/build/specialChars';\r\n\r\n\r\nconst DownIcon =(props)=> {\r\n    return(\r\n        <div\r\n        style={{\r\n            color:\"white\",\r\n            display :\"flex\",\r\n            flexDirection:\"row\",\r\n            alignItems:\"center\",\r\n            justifyContent:\"center\",\r\n            marginBottom:\"-80px\",\r\n            transform:\"translateY(-85px)\"\r\n        }}\r\n        >\r\n          \r\n                <img src={props.icon} />\r\n            </div>\r\n       \r\n    )\r\n\r\n}\r\nexport default DownIcon","import React, {Component} from 'react';\r\nimport Fullpage  from '../component/Fullpage'\r\nimport DownIcon  from '../component/DownIcon'\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport './TitleAndIcon.css'\r\nimport { Link, Element } from 'react-scroll'\r\nimport '../App.css'\r\n\r\n\r\n\r\n\r\nclass TitleAndIcon extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n  }\r\n    render(){\r\n        return(\r\n          <div>\r\n           \r\n      <Fullpage className= {this.props.classN} >\r\n        \r\n      <h1 className=\"title\"> \r\n        {data.title}\r\n        </h1>\r\n       \r\n      \r\n      <div>\r\n        <h2> {data.subtitle} </h2>\r\n      </div>\r\n      <div className=\"icon-wrapper\">\r\n        {Object.keys(data.links).map(key => {\r\n          return(\r\n            <div className=\"icon\">\r\n            <SocialIcon url={data.links[key]} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n       </Fullpage>\r\n       <a href=\"#\"><Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={0} duration={500} delay={0}>\r\n       <DownIcon \r\n         icon ={data.icons.down}   \r\n          />\r\n        </Link> </a>\r\n        <Element name=\"about\" className=\"element\">\r\n        </Element>\r\n        \r\n       \r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default  TitleAndIcon","import React, {Component} from 'react'\r\nimport Fullpage  from '../component/Fullpage'\r\nimport data from \"../data.json\";\r\nimport { Link, Element } from 'react-scroll'\r\nimport DownIcon  from '../component/DownIcon'\r\nimport './AboutSection.css'\r\n\r\n\r\n\r\n\r\nclass AboutSection extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n    render(){\r\n        return(\r\n          <div>\r\n          <Fullpage className={this.props.classN}>\r\n          <div>\r\n          <h3 >\r\n          {data.sections[0].title}\r\n        </h3>\r\n        <div className =\"paragraphs\"></div>\r\n        <p >\r\n          {data.sections[0].items[0].content}\r\n        </p>\r\n      </div>\r\n      </Fullpage>\r\n      <a href=\"#\"><Link activeClass=\"active\" to=\"skill\" spy={true} smooth={true} offset={50} duration={500} delay={0}>\r\n      <DownIcon \r\n        icon ={data.icons.down}   \r\n         />\r\n       </Link> </a>\r\n       <Element name=\"skill\" className=\"element\">\r\n         \r\n       </Element>\r\n       </div>\r\n        )\r\n    }\r\n}\r\nexport default  AboutSection","import React, {Component} from 'react';\r\nimport { ICONS } from 'jest-util/build/specialChars';\r\n\r\n\r\nconst TopIcon =(props)=> {\r\n    return(\r\n        <div\r\n        style={{\r\n            color:\"white\",\r\n            display :\"flex\",\r\n            flexDirection:\"row\",\r\n            alignItems:\"center\",\r\n            justifyContent:\"center\",\r\n            marginBottom:\"-80px\",\r\n            transform:\"translateY(-85px)\"\r\n        }}\r\n        >\r\n          \r\n                <img src={props.icon} />\r\n            </div>\r\n       \r\n    )\r\n\r\n}\r\nexport default TopIcon","import React, {Component} from 'react'\r\nimport './SkillCard.css'\r\n\r\nclass SkillCard extends Component {\r\n    render(){\r\n        const {skill} =this.props\r\n        return(\r\n            <div className= \"card\">\r\n                <div className= \"image-wrapper\">\r\n                    <img src={skill.content.image} />\r\n                    </div>   \r\n                    <div className=\"skill-title-wrapper\">\r\n                        <h4> {skill.content.title}</h4>\r\n                    </div>\r\n                             </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default  SkillCard","import React, {Component} from 'react'\r\nimport Fullpage  from '../component/Fullpage'\r\nimport data from \"../data.json\";\r\nimport './AboutSection.css'\r\nimport './SkillSection.css'\r\nimport { Link, Element } from 'react-scroll'\r\nimport TopIcon  from '../component/TopIcon'\r\nimport SkillCard from \"../component/skillCard\"\r\n\r\n\r\n\r\nclass SkillSection extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n          <Fullpage className={this.props.classN}>\r\n         \r\n          <h3> {data.sections[1].title}</h3>\r\n        <div className =\"card-wrapper\">\r\n            {data.sections[1].items.map (eachskill => {\r\n               return (\r\n                  <SkillCard skill={eachskill}/>\r\n\r\n                );\r\n\r\n          })}\r\n       \r\n      </div>\r\n      </Fullpage>\r\n      <a href=\"#\"><Link activeClass=\"active\" to=\"title\" spy={true} smooth={true} offset={-500} duration={500} onSetActive={this.handleSetActive}>\r\n          \r\n      <TopIcon \r\n        icon ={data.icons.top}   \r\n         />\r\n       </Link> </a>\r\n       <Element name=\"test1\" className=\"element\">\r\n        </Element>\r\n       </div>\r\n        );\r\n    }\r\n}\r\nexport default  SkillSection;","import React,{Component} from 'react';\nimport SnowStorm from 'react-snowstorm';\nimport Navigation from './sections/Navigation';\nimport TitleAndIcon from './sections/TitleAndIcon';\nimport AboutSection from './sections/AboutSection';\nimport SkillSection from './sections/SkillSection';\nimport { Link } from 'react-scroll';\nimport data from \"./data.json\";\nimport './sections/Navigation.css'\n\n\n\nimport './App.css';\n\nclass  App extends Component {\n  \n  constructor(){\n   super()\n   this.state={\n   tem:'first',\n   tem1:'second',\n   tem2:'third'\n   }\n   }\n  handleClick= ()=> {\n        \n    const min = 1;\n    const max = 6;\n    let rand = (parseInt)(min + Math.random() * (max - min));\n   console.log(\"tem\"+ rand)\n    let tem=  \"tem\"+ rand\n     rand = (parseInt)(min + Math.random() * (max - min));\n    let tem1= \"tem\"+ rand\n     rand = (parseInt)(min + Math.random() * (max - min));\n    let tem2= \"tem\" + rand \n    this.setState({\n      tem:tem,\n      tem1:tem1,\n      tem2:tem2\n    })\n    }\n\n  render(){\n  return (\n    <div className=\"App\">\n      <div>\n       <h4 className=\"navarbar\"></h4>\n\n       <div className = \"navarbar\">\n       \n       <ul>\n      <li>  <a className=\"active\" href =\"#title\" ><Link activeClass=\"active\" to=\"title\" spy={true} smooth={true} offset={-500} duration={500} onSetActive={this.handleSetActive}>BAHMAN!</Link> </a></li>\n       <li> <a href =\"#About\" ><Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>ABOUT</Link> </a></li>\n       <li> <a href =\"#Skill\" ><Link activeClass=\"active\" to=\"skill\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>SKILL</Link> </a></li>\n       <li style={{float: 'right'}} >\n           <a class=\"Material\" href=\"#paint \"> <img src={data.icons.paint} \n            onClick = {this.handleClick} \n            ></img></a></li>\n           \n        </ul>\n       \n   </div>\n      \n\n       {/* <Navigation/> */}\n       \n       </div>\n      <SnowStorm />  \n      <TitleAndIcon  classN={this.state.tem}/>\n      <AboutSection  classN={this.state.tem1}/>\n      <SkillSection classN={this.state.tem2}/>\n   \n    </div>\n  );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}